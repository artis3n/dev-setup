- name: Packages | Apt | Install dependencies
  become: yes
  apt:
    name: '{{ apt_dependencies }}'
    update_cache: 'yes'
    state: present
  notify: Clean up apt

- name: Packages | Apt | Add repositories
  become: yes
  apt_repository:
    repo: 'ppa:{{ item }}'
    state: present
  with_items: '{{ apt_repos }}'

- name: Packages | Apt | Upgrade packages - async
  become: yes
  apt:
    upgrade: full
    update_cache: 'yes'
  async: 3600
  poll: 0
  register: apt_upgrade

- name: Packages | Apt | Upgrade packages - poll
  async_status:
    jid: "{{ apt_upgrade.ansible_job_id }}"
  register: apt_upgrade_result
  until: apt_upgrade_result.finished
  retries: 120
  delay: 30
  notify: Clean up apt

- name: Packages | Apt | Install packages - async
  become: yes
  apt:
    name: '{{ apt_packages }}'
    state: present
  register: apt_install
  async: 3600
  poll: 0
  notify: Clean up apt

- name: Packages | Apt | Install packages - poll
  async_status:
    jid: "{{ apt_install.ansible_job_id }}"
  register: apt_install_result
  until: apt_install_result.finished
  retries: 120
  delay: 30
  notify: Clean up apt

- name: Packages | Flatpak | Check for flathub
  shell: |
    set -o pipefail
    flatpak remotes | grep flathub
  args:
    executable: /bin/bash
  changed_when: false
  register: flathub_remote
  failed_when: flathub_remote.rc > 1

- name: Packages | Flatpak | Set up flathub
  command: flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
  when: flathub_remote.rc != 0

- name: Packages | Flatpak | Install applications
  flatpak:
    name: "{{ item }}"
    state: present
  loop: "{{ flatpak_applications }}"
